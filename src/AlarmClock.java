
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.lang.*;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vanyshar
 */
public class AlarmClock extends javax.swing.JFrame{

    /**
     * Creates new form alarmClock
     */
    public AlarmClock() {
        initComponents();
        hour = 0;
        minute = 0;
        second = 0;
        alarmHour = 0;
        alarmMinute = 0;
        alarmSecond = 0;
        alarmHourText.setText(Integer.toString(alarmHour));
        alarmMinuteText.setText(Integer.toString(alarmMinute));
        alarmSecondText.setText(Integer.toString(alarmSecond));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeLabel = new javax.swing.JLabel();
        setAlarmTimeLabel = new javax.swing.JLabel();
        alarmHourText = new javax.swing.JTextField();
        alarmHourLabel = new javax.swing.JLabel();
        alarmMinuteLabel = new javax.swing.JLabel();
        alarmMinuteText = new javax.swing.JTextField();
        setAlarmButton = new javax.swing.JButton();
        alarmSecondLabel = new javax.swing.JLabel();
        alarmSecondText = new javax.swing.JTextField();
        wakeUpLabel = new javax.swing.JLabel();
        timeLabelLabel = new javax.swing.JLabel();
        alarmLabelLabel = new javax.swing.JLabel();
        alarmTimeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        timeLabel.setText("00:00:00");

        setAlarmTimeLabel.setText("ALARM TIME");

        alarmHourText.setText("00");
        alarmHourText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alarmHourTextActionPerformed(evt);
            }
        });

        alarmHourLabel.setText("HR:");

        alarmMinuteLabel.setText("MIN:");

        alarmMinuteText.setText("Minute");

        setAlarmButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        setAlarmButton.setText("SET ALARM");
        setAlarmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAlarmButtonActionPerformed(evt);
            }
        });

        alarmSecondLabel.setText("SEC:");

        alarmSecondText.setText("Second");

        wakeUpLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        wakeUpLabel.setText("Wake Up!!!");

        timeLabelLabel.setText("TIME:");

        alarmLabelLabel.setText("ALARM:");

        alarmTimeLabel.setText("00:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setAlarmButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(alarmHourLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alarmHourText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alarmMinuteLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alarmMinuteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alarmSecondLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alarmSecondText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(setAlarmTimeLabel)
                    .addComponent(timeLabelLabel)
                    .addComponent(timeLabel)
                    .addComponent(alarmTimeLabel)
                    .addComponent(alarmLabelLabel))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(wakeUpLabel)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(timeLabelLabel)
                .addGap(2, 2, 2)
                .addComponent(timeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alarmLabelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alarmTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(setAlarmTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alarmHourText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alarmHourLabel)
                    .addComponent(alarmMinuteLabel)
                    .addComponent(alarmMinuteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alarmSecondLabel)
                    .addComponent(alarmSecondText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(setAlarmButton)
                .addGap(34, 34, 34)
                .addComponent(wakeUpLabel)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alarmHourTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alarmHourTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alarmHourTextActionPerformed

    private void setAlarmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAlarmButtonActionPerformed
        alarmHour = Integer.valueOf(alarmHourText.getText());
        alarmMinute = Integer.valueOf(alarmMinuteText.getText());
        alarmSecond = Integer.valueOf(alarmSecondText.getText());
    }//GEN-LAST:event_setAlarmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/alarmClockswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlarmClock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlarmClock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlarmClock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlarmClock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        AlarmClock alarmClock = new AlarmClock();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                alarmClock.setVisible(true);
            }
        });
        alarmClock.startTimer(alarmClock);
        
        
    }
    
    public void startTimer(AlarmClock alarmClock){
        int delay = 10; //milliseconds
        ActionListener timeUpdater;
        timeUpdater = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                alarmClock.changeTime();
            }
        };
        new Timer(delay, timeUpdater).start();
    }
    
    public void changeTime(){
        final int INTERVAL=5;
        final int ALARMINTERVAL=10;
        Calendar calendar = Calendar.getInstance();
        hour = calendar.get(Calendar.HOUR_OF_DAY);
        minute = calendar.get(Calendar.MINUTE);
        second = calendar.get(Calendar.SECOND);
//        timeLabel.setText(String.format("%tc", new Date()));
        timeLabel.setText("HR:"+Integer.toString(hour)+" MIN:"+Integer.toString(minute)+" SEC:"+Integer.toString(second));
        alarmTimeLabel.setText("HR:"+Integer.toString(alarmHour)+" MIN:"+Integer.toString(alarmMinute)+" SEC:"+Integer.toString(alarmSecond));
        if (hour == alarmHour && minute == alarmMinute && (second < (alarmSecond+INTERVAL) && second > alarmSecond)){
            wakeUpLabel.setVisible(true);
        }
        else{
            wakeUpLabel.setVisible(false);
            
        }
    }
    
    int hour;
    int minute;
    int second;
    int alarmHour;
    int alarmMinute;
    int alarmSecond;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alarmHourLabel;
    private javax.swing.JTextField alarmHourText;
    private javax.swing.JLabel alarmLabelLabel;
    private javax.swing.JLabel alarmMinuteLabel;
    private javax.swing.JTextField alarmMinuteText;
    private javax.swing.JLabel alarmSecondLabel;
    private javax.swing.JTextField alarmSecondText;
    private javax.swing.JLabel alarmTimeLabel;
    private javax.swing.JButton setAlarmButton;
    private javax.swing.JLabel setAlarmTimeLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel timeLabelLabel;
    private javax.swing.JLabel wakeUpLabel;
    // End of variables declaration//GEN-END:variables
}
